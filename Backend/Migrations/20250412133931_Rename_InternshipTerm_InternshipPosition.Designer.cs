// <auto-generated />
using System;
using Backend;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(BackendContext))]
    [Migration("20250412133931_Rename_InternshipTerm_InternshipPosition")]
    partial class Rename_InternshipTerm_InternshipPosition
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("Backend.Models.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int?>("InternshipPositionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Method")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InternshipPositionId");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("Backend.Models.Entities.InternshipPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApplicationPeriodId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PracticePeriodId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationPeriodId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PracticePeriodId");

                    b.ToTable("InternshipPositions");
                });

            modelBuilder.Entity("Backend.Models.Entities.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdministratorEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Expiration")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("Backend.Models.Entities.Period", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("End")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Start")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Period");
                });

            modelBuilder.Entity("Backend.Models.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("InternshipPositionTag", b =>
                {
                    b.Property<int>("InternshipTermsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InternshipTermsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("InternshipPositionTag");
                });

            modelBuilder.Entity("Backend.Models.Entities.Contact", b =>
                {
                    b.HasOne("Backend.Models.Entities.InternshipPosition", null)
                        .WithMany("Contacts")
                        .HasForeignKey("InternshipPositionId");
                });

            modelBuilder.Entity("Backend.Models.Entities.InternshipPosition", b =>
                {
                    b.HasOne("Backend.Models.Entities.Period", "ApplicationPeriod")
                        .WithMany()
                        .HasForeignKey("ApplicationPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.Entities.Organization", "Organization")
                        .WithMany("InternshipTerms")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.Entities.Period", "PracticePeriod")
                        .WithMany()
                        .HasForeignKey("PracticePeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationPeriod");

                    b.Navigation("Organization");

                    b.Navigation("PracticePeriod");
                });

            modelBuilder.Entity("InternshipPositionTag", b =>
                {
                    b.HasOne("Backend.Models.Entities.InternshipPosition", null)
                        .WithMany()
                        .HasForeignKey("InternshipTermsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Backend.Models.Entities.InternshipPosition", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("Backend.Models.Entities.Organization", b =>
                {
                    b.Navigation("InternshipTerms");
                });
#pragma warning restore 612, 618
        }
    }
}
